{{- if .Values.components.auth.enabled }}
apiVersion: {{ include "deployment.apiVersion" . }}
kind: Deployment
metadata:
  labels:
    app: horusec-auth
  name: {{ .Values.components.auth.name }}
  namespace: {{ .Release.Namespace }}
spec:
  {{- if not .Values.components.auth.autoscaling.enabled }}
  replicas: {{ .Values.components.auth.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: horusec-auth
  template:
    metadata:
      labels:
        app: horusec-auth
    spec:
      {{- include "auth.imagePullSecrets" . | nindent 6 -}}
      containers:
        - env:
            - name: HORUSEC_SWAGGER_HOST
              value: 0.0.0.0
            - name: HORUSEC_PORT
              value: "8006"
            - name: HORUSEC_DATABASE_SQL_DIALECT
              value: {{ .Values.global.database.dialect }}
            - name: HORUSEC_DATABASE_SQL_LOG_MODE
              value: {{ .Values.global.database.logMode | quote }}
            - name: HORUSEC_API_URL
            - name: HORUSEC_GRPC_PORT
              value: "8007"
            - name: HORUSEC_GRPC_USE_CERTS
              value: "false"
            - name: HORUSEC_BROKER_HOST
              value: rabbitmq.queue
            - name: HORUSEC_BROKER_PORT
              value: {{ .Values.global.broker.port | quote }}
            - name: HORUSEC_DISABLED_BROKER
              value: {{ not .Values.global.broker.enabled | quote }}
            - name: HORUSEC_AUTH_TYPE
              value: {{ .Values.components.auth.type }}
            - name: HORUSEC_ENABLE_APPLICATION_ADMIN
              value: {{ .Values.global.administrator.enabled | quote }}
{{- if .Values.global.administrator.enabled }}
            - name: HORUSEC_APPLICATION_ADMIN_DATA
              value: '{"username":{{ .Values.global.administrator.username | quote }},"email":{{ .Values.global.administrator.email | quote }},"password":{{ .Values.global.administrator.password | quote }}}'
{{- end }}
            - name: HORUSEC_BROKER_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ .Values.global.broker.secretName }}
            - name: HORUSEC_BROKER_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Values.global.broker.secretName }}
            - name: HORUSEC_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ .Values.global.database.secretName }}
            - name: HORUSEC_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Values.global.database.secretName }}
            - name: HORUSEC_DATABASE_SQL_URI
              value: "postgresql://$(HORUSEC_DATABASE_USERNAME):$(HORUSEC_DATABASE_PASSWORD)@{{- .Values.global.database.host -}}:{{- .Values.global.database.port -}}/horusec_db{{- if not .Values.global.database.sslMode -}}?sslmode=disable{{- end -}}"
            - name: HORUSEC_JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: secret-key
                  name: {{ .Values.global.jwt.secretName }}
{{- if eq .Values.components.auth.type "keycloak" }}
            - name: HORUSEC_KEYCLOAK_BASE_PATH
            {{- if empty .Values.global.keycloak.internalURL }}
              {{- $parsed := urlParse .Values.global.keycloak.publicURL }}
              value: {{ $parsed.scheme -}}://{{- $parsed.host }}
            {{- else }}
              {{- $parsed := urlParse .Values.global.keycloak.internalURL }}
              value: {{ $parsed.scheme -}}://{{- $parsed.host }}
            {{- end }}
            - name: HORUSEC_KEYCLOAK_CLIENT_ID
              value: {{ .Values.global.keycloak.clients.confidential.id }}
            - name: HORUSEC_KEYCLOAK_CLIENT_SECRET
              value: {{ .Values.global.keycloak.clients.confidential.secret }}
            - name: HORUSEC_KEYCLOAK_REALM
              value: {{ .Values.global.keycloak.realm }}
            - name: HORUSEC_KEYCLOAK_OTP
              value: {{ .Values.global.keycloak.otp | quote }}
{{- end }}
            {{- if .Values.components.auth.extraEnv }}
            # Extra environment variables
            {{- toYaml .Values.components.auth.extraEnv | nindent 12 }}
            {{- end }}
          image: "{{ template "auth.image" . }}"
          imagePullPolicy: {{ .Values.components.auth.image.pullPolicy | quote }}
          name: horusec-auth
          ports:
          {{- range $key, $value := .Values.components.auth.port }}
            - containerPort: {{ $value }}
              name: {{ $key }}
              protocol: TCP
          {{- end }}
          resources: {}
          securityContext: {}
      securityContext: {}
      serviceAccountName: auth
      terminationGracePeriodSeconds: 30
{{- end }}