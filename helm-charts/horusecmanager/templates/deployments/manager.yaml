{{- if .Values.components.manager.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: horusec-manager
  name: {{ .Values.components.manager.name }}
  namespace: {{ .Release.Namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: horusec-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: horusec-manager
    spec:
      {{- include "manager.imagePullSecrets" . | nindent 6 -}}
      containers:
        - env:
            - name: REACT_APP_HORUSEC_ENDPOINT_API
              value: {{ .Values.components.api.ingress.scheme -}}:\/\/{{- .Values.components.api.ingress.host }}
            - name: REACT_APP_HORUSEC_ENDPOINT_ANALYTIC
              value: {{ .Values.components.analytic.ingress.scheme -}}:\/\/{{- .Values.components.analytic.ingress.host }}
            - name: REACT_APP_HORUSEC_ENDPOINT_ACCOUNT
              value: {{ .Values.components.account.ingress.scheme -}}:\/\/{{- .Values.components.account.ingress.host }}
            - name: REACT_APP_HORUSEC_ENDPOINT_AUTH
              value: {{ .Values.components.auth.ingress.scheme -}}:\/\/{{- .Values.components.auth.ingress.host }}
            - name: REACT_APP_HORUSEC_MANAGER_PATH
              value: \{{ .Values.components.manager.ingress.path }}
{{- if eq .Values.components.auth.type "keycloak" }}
{{- $parsed := urlParse .Values.global.keycloak.publicURL }}
            - name: REACT_APP_KEYCLOAK_BASE_PATH
              value: {{ $parsed.scheme -}}:\/\/{{- $parsed.host -}}\{{- $parsed.path }}
            - name: REACT_APP_KEYCLOAK_CLIENT_ID
              value: {{ .Values.global.keycloak.clients.public.id }}
            - name: REACT_APP_KEYCLOAK_REALM
              value: {{ .Values.global.keycloak.realm }}
{{- end }}
            {{- if .Values.components.manager.extraEnv }}
            # Extra environment variables
            {{- toYaml .Values.components.manager.extraEnv | nindent 12 }}
            {{- end }}
          image: "{{ template "manager.image" . }}"
          imagePullPolicy: {{ .Values.components.manager.image.pullPolicy | quote }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: horusec-manager
          ports:
          {{- range $key, $value := .Values.components.manager.port }}
            - containerPort: {{ $value }}
              name: {{ $key }}
              protocol: TCP
          {{- end }}
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: manager
      serviceAccountName: manager
      terminationGracePeriodSeconds: 30
{{- end }}