{{- if .Values.components.analytic.enabled }}
apiVersion: {{ include "deployment.apiVersion" . }}
kind: Deployment
metadata:
  labels:
    app: horusec-analytic
  name: {{ .Values.components.analytic.name }}
  namespace: {{ .Release.Namespace }}
spec:
  {{- if not .Values.components.analytic.pod.autoscaling.enabled }}
  replicas: {{ .Values.components.analytic.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: horusec-analytic
  template:
    metadata:
      labels:
        app: horusec-analytic
    spec:
      {{- include "analytic.imagePullSecrets" . | nindent 6 -}}
      containers:
        - env:
            - name: HORUSEC_SWAGGER_HOST
              value: 0.0.0.0
            - name: HORUSEC_PORT
              value: {{ .Values.components.analytic.port.http | quote }}
            - name: HORUSEC_DATABASE_SQL_DIALECT
              value: {{ .Values.global.database.dialect }}
            - name: HORUSEC_DATABASE_SQL_LOG_MODE
              value: {{ .Values.global.database.logMode | quote }}
            - name: HORUSEC_GRPC_AUTH_URL
              value: "auth.{{- .Release.Namespace -}}.svc.cluster.local:{{- .Values.components.auth.port.grpc }}"
            - name: HORUSEC_GRPC_USE_CERTS
              value: "false"
            {{- if .Values.demo }}
            - name: HORUSEC_DATABASE_USERNAME
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: HORUSEC_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: {{ printf "%s-postgresql" .Release.Name }}
            {{- else }}
            - name: HORUSEC_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ .Values.global.database.secretName }}
            - name: HORUSEC_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Values.global.database.secretName }}
            {{- end }}
            - name: HORUSEC_DATABASE_SQL_URI
              value: "postgresql://$(HORUSEC_DATABASE_USERNAME):$(HORUSEC_DATABASE_PASSWORD)@{{- include "database.address" . -}}{{- if not .Values.global.database.sslMode -}}?sslmode=disable{{- end -}}"
            - name: HORUSEC_JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: secret-key
                  name: {{ .Values.global.jwt.secretName }}
            {{- if .Values.components.analytic.extraEnv }}
            # Extra environment variables
            {{- toYaml .Values.components.analytic.extraEnv | nindent 12 }}
            {{- end }}
          image: "{{ template "analytic.image" . }}"
          imagePullPolicy: {{ .Values.components.analytic.container.image.pullPolicy | quote }}
          name: horusec-analytic
          ports:
          {{- range $key, $value := .Values.components.analytic.port }}
            - containerPort: {{ $value }}
              name: {{ $key }}
              protocol: TCP
          {{- end }}
          livenessProbe:
            httpGet:
              path: /analytic/health
              port: http
              scheme: HTTP
            failureThreshold: {{ .Values.components.analytic.container.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.components.analytic.container.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.components.analytic.container.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.components.analytic.container.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.components.analytic.container.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /analytic/health
              port: http
              scheme: HTTP
            failureThreshold: {{ .Values.components.analytic.container.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.components.analytic.container.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.components.analytic.container.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.components.analytic.container.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.components.analytic.container.readinessProbe.timeoutSeconds }}
          {{- if .Values.components.analytic.container.resources }}
          resources: {{- toYaml .Values.components.analytic.container.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.components.analytic.container.securityContext.enabled }}
          securityContext: {{- omit .Values.components.analytic.container.securityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
      {{- if .Values.components.analytic.pod.securityContext.enabled }}
      securityContext: {{- omit .Values.components.analytic.pod.securityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      serviceAccountName: analytic
      terminationGracePeriodSeconds: 30
{{- end }}