apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-migration
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": "post-install,post-upgrade,post-rollback"
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
spec:
  template:
    metadata:
      name: migration
    spec:
      restartPolicy: Never
      {{- if .Values.demo }}
      initContainers:
        - name: check-db-ready
          image: postgres:9.6
          command:
            - "sh"
            - "-c"
            - "until pg_isready -h {{ printf "%s-postgresql" .Release.Name }} -p 5432; do echo waiting for database; sleep 2; done;"
      {{- end }}
      containers:
        - name: horusec-database-migration
          image: "horuszup/horusec-migration:latest"
          command: [ "migrate.sh" ]
          env:
            {{- if .Values.demo }}
            - name: HORUSEC_DATABASE_USERNAME
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: HORUSEC_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: {{ printf "%s-postgresql" .Release.Name }}
            {{- else }}
            - name: HORUSEC_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ .Values.global.database.secretName }}
            - name: HORUSEC_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Values.global.database.secretName }}
            {{- end }}
            - name: HORUSEC_DATABASE_SQL_URI
              value: "postgresql://$(HORUSEC_DATABASE_USERNAME):$(HORUSEC_DATABASE_PASSWORD)@{{- include "database.address" . -}}{{- if not .Values.global.database.sslMode -}}?sslmode=disable{{- end -}}"
